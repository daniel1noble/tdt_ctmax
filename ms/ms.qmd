---
title: "Box 1 - TDT Curves"
bibliography: ../bib/refs.bib
csl: ../bib/nature.csl
format:
  docx:
    reference-doc: ../bib/template.docx
editor_options: 
  chunk_output_type: console
execute:
  freeze: auto  # re-render only when source changes
  cache: false
  echo: false
  warning: false
  error: false
  include: true
crossref:
  fig-title: '**Figure**'
  fig-labels: arabic
  title-delim: "-"
  fig-prefix: "Figure"
  tbl-prefix: "Table"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, tidy = TRUE, fig.width = 10)
## numbers >= 10^5 will be denoted in scientific notation,		  ## numbers >= 10^5 will be denoted in scientific notation,
  ## and rounded to 2 digits		  ## and rounded to 2 digits
  options(digits = 2)

##################################
# Clean workspace
##################################
    rm(list=ls())

##################################
# Loading packages & Functions
##################################
    pacman::p_load(tidyverse,  metafor, flextable,  patchwork, ggtree, ape, phytools, viridis, MCMCglmm, brms, latex2exp, orchaRd, multcomp, bayesplot, here, readxl, magick)

##################################
# Functions
##################################

  source(here::here("R", "func.R"))

##################################
# Loading tree and data
##################################
# Bring in the fly tree
  tree <- read.tree(here::here("phylogeny/", "drosi2.tre"))

# Grab our data
   data <- read.csv(here::here("data", "drosi_data.csv"))

##################################
# Summary Data
##################################

sum <- data  %>% group_by(species)  %>% summarise(ctmax = mean(ctmax, na.rm = TRUE),
                                                   cfls = mean(cfts, na.rm = TRUE),
                                                   tdt_z = mean(cfts, na.rm = TRUE))

sum2 <- sapply(sum, function(x) sum(!is.na(x)))
```

## Estimate TDT Curve Parameters for *Drosophilia*
```{r, newspp}
#| label: newspp
#| echo: false
#| message: false
#| include: false

# Load the data
  spp <- read_csv(here::here("data", "tdt_curves.csv"))

# Calcluate the TDT
  tdt <- split(spp, spp$group) 

# Calculations
  txt <- plyr::ldply(lapply(tdt, function(x) tdt_calc(data = x)))

```

We can have a look at each new species' TDT curves collected by Vanessa (@fig-tdt). We can also use the data to calculate the TDT curve (slope) and $CT_{max}$ for each species (@tbl-1). 

```{r, fig-tdt}
#| label: fig-tdt
#| fig-cap: TDT curves for each species. The x-axis is temperature and the y-axis is the log10 of the time to coma. 
#| message: false
#| echo: false

# Lets have a look at the data
  #ggplot2::ggplot(data, ggplot2::aes(x = assay_temp, y = log10(t_coma), colour = group)) + ggplot2::geom_point() + #ggplot2::facet_wrap(~group, nrow = 2, ncol = 4) +ggplot2::labs(x = "Temperature", y = "log 10 Coma Time") + #ggplot2::theme_bw() 
  
# Fecet wrap doesn't seem to want to work
  par(mfrow=c(2,4))
  invisible(lapply(tdt, function(x) plot(log10(x$t_coma) ~ x$assay_temp,  main= unique(x$group), xlab = "Temperature", ylab = "log 10 Coma Time", pch = 16, col = "black")))
```

```{r, tbl-1}
#| label: tbl-1
#| tbl-cap: Estimated parameters for each of the 8 new species. 
labels <- c("Species", "Slope", "CTMax")

flextable(txt) %>% 
    align(align = "center", part = "all") %>% 
    font(fontname="Times", part = "body") %>% 
    font(fontname="Times", part = "header")  %>%  
    flextable::compose(i = 1, j = 1:3, part = "header", value= as_paragraph(as_b(labels))) %>% 
    autofit()  
```

## Applying Multivariate Modelling Approaches 

```{r, treesetup}
#| label: treesetup
#| echo: false
#| message: false
#| include: false

# Ultrametric?
  is.ultrametric(tree) # nope
  tree2 <- force.ultrametric(tree, method = "extend")

# functions
  source(here::here("R", "func.R"))
  t <- tree_checks(tree2, data = data, dataCol = "species", type = "check")
  data <- data %>% mutate(species = gsub(" ", "", species),
                          phylo = species,
                          obs = 1:n()) %>% filter(!species %in% t$Species_InData_But_NotTree) 
  tree3 <- tree_checks(tree2, data = data, dataCol = "species", type = "prune")
  tree_checks(tree3, data = data, dataCol = "species", type = "check")

  # Grab phylo matrix
  phy_vcv <- vcv(tree3, cor = FALSE)
  tree3$node.label <- NULL

# prune tree
  t <- tree_checks(data, tree, dataCol = "species", type = "prune")

```

```{r, fig-tree}
#| label: fig-tree
#| fig-cap: "Phylogenetic relationships among `r length(tree$tip.label)` *Drosophila* species."

# Plot the tree
  plot(tree, cex = 0.2, type = "radial")
```

```{r, models}
#| label: models
#| echo: false
#| include: false
#| 
### MCMCglmm Bayesian models. Deals with missing data using data augmentation

rerun = FALSE
if(rerun){
    prior = list(R = list(V = diag(3), nu=1.002), 
               G = list(G1=list(V = diag(3), nu = 1.002),
                        G2=list(V = diag(3), nu = 1.002)))
  
  data$animal = data$phylo
  
  mcmcglmm_model <- MCMCglmm::MCMCglmm(cbind(ctmax, cfts, tdt_z) ~ -1 + trait, random = ~us(trait):animal + us(trait):species, rcov = ~us(trait):units ,pedigree=tree3,burnin=1000, nitt = 300000, thin = 5, family = rep("gaussian", 3), prior = prior, pl = TRUE, pr = TRUE, data = data)
  
  # We'll also z-transform to make the correlation easier to calculate. 
  data <- data %>% mutate(z_ctmax = scale(ctmax),
                           z_cfts = scale(cfts),
                          z_tdt_z = scale(tdt_z))
  
  mcmcglmm_model_z_trans <- MCMCglmm::MCMCglmm(cbind(z_ctmax, z_cfts, z_tdt_z) ~ -1 + trait, random = ~us(trait):animal + us(trait):species, rcov = ~us(trait):units, pedigree=tree3,burnin=1000, nitt = 300000, thin = 5, family = rep("gaussian", 3), prior = prior, pl = TRUE, pr = TRUE, data = data)
  
  # Ditch phylogeny to see if there is support for including it or not. DIC is WAY lower for phylogenetic model, so good to include it.
  prior2 = list(R = list(V = diag(3), nu=1.002), 
               G = list(G1=list(V = diag(3), nu = 1.002)))
  mcmcglmm_model_z_trans_nophylo <- MCMCglmm::MCMCglmm(cbind(z_ctmax, z_cfts, z_tdt_z) ~ -1 + trait, random = ~us(trait):species, rcov = ~us(trait):units, pedigree=tree3,burnin=1000, nitt = 300000, thin = 5, family = rep("gaussian", 3), prior = prior2, pl = TRUE, pr = TRUE, data = data)
  
  saveRDS(mcmcglmm_model, file =  here::here("output/model", "mcmcglmm_model"))
  saveRDS(mcmcglmm_model_z_trans, file = here::here("output/model", "mcmcglmm_model_z_trans")) 
  saveRDS(mcmcglmm_model_z_trans_nophylo, file =  here::here("output/model", "mcmcglmm_model_z_trans_nophylo")) 
} else{
                mcmcglmm_model <- readRDS(here::here("output/model/", "mcmcglmm_model"))
        mcmcglmm_model_z_trans <- readRDS(here::here("output/model/", "mcmcglmm_model_z_trans"))
mcmcglmm_model_z_trans_nophylo <- readRDS(here::here("output/model/", "mcmcglmm_model_z_trans_nophylo"))
}

```

```{r, posteriors}
#| label: posteriors
#| echo: false
#| include: false
#| 
# Extract posterior estimates
  sol <- mcmcglmm_model$Sol
  vcv <- mcmcglmm_model$VCV

# Extract the estimated / imputed Z for each species, but drop internal ancestral nodes
    z_BLUPS <- extract_blups(sol, trait ="tdt_z")
ctmax_blups <- extract_blups(sol, trait ="ctmax")
  cfts_blups <- extract_blups(sol, trait ="cfts")
  
# Remember that these are BLUPs. They are deviations from the intercept. So, to get back to the z we need to add the intercept to each of them.
      z <- z_BLUPS[["phy"]] + z_BLUPS[["spp"]] + sol[, "traittdt_z"]
  ctmax <- ctmax_blups[["phy"]] + ctmax_blups[["spp"]]+ sol[, "traitctmax"]
   cfts <- cfts_blups[["phy"]] + cfts_blups[["spp"]]+ sol[, "traitcfts"]

# Clean up names so they are just species names
      colnames(z) <- gsub("traittdt_z.animal.", "", colnames(z))
  colnames(ctmax) <- gsub("traitctmax.animal.", "", colnames(ctmax))
   colnames(cfts) <- gsub("traitcfts.animal.", "", colnames(cfts))

# Have a look at how well the model gets the actual data correct.
    check_z <- predict_accuracy(data, z, trait = tdt_z)
check_ctmax <- predict_accuracy(data, ctmax, trait = ctmax)
 check_cfls <- predict_accuracy(data, cfts, trait = cfts) # Something wrong here.
   
  # Plot the data
    plot(check_z$trait ~ check_z$est, ylab = "True Slope (z)", xlab = "Estimated Slope", pch = 16, cex = 2)
    abline(a = 0, b = 1, col = "red")
    plot(check_ctmax$trait ~ check_ctmax$est, ylab = "True CTmax", xlab = "Estimated CTmax", pch = 16, cex = 2)
    abline(a = 0, b = 1, col = "red")
    plot(check_cfls$trait ~ check_cfls$est, ylab = "True CFLs", xlab = "Estimated CFLs", pch = 16, cex = 2)
    abline(a = 0, b = 1, col = "red")

  # Check phylogeneic signal. Need to think about the covariance here. 
    # CTMax - Yes
      phylo_ctmax <- vcv[,"traitctmax:traitctmax.animal"]
        spp_ctmax <- vcv[,"traitctmax:traitctmax.species"]
      units_ctmax <- vcv[,"traitctmax:traitctmax.units"]
      
      h2_ctmax = phylo_ctmax / (phylo_ctmax + spp_ctmax + units_ctmax)
      spp_ctmax <- spp_ctmax / (phylo_ctmax + spp_ctmax + units_ctmax)
      posterior.mode(h2_ctmax)
      HPDinterval(h2_ctmax)

      posterior.mode(spp_ctmax)
      HPDinterval(spp_ctmax)

    # CFL - Yes
      phylo_cfls <- vcv[,"traitcfts:traitcfts.animal"]
        spp_cfls <- vcv[,"traitcfts:traitcfts.species"]
      units_cfls <- vcv[,"traitcfts:traitcfts.units"]
      
      h2_cfls = phylo_cfls / (phylo_cfls + spp_cfls + units_cfls)
     spp_cfls = spp_cfls / (phylo_cfls + spp_cfls + units_cfls)
      posterior.mode(h2_cfls)
      HPDinterval(h2_cfls)

       posterior.mode(spp_cfls)
      HPDinterval(spp_cfls)
      
    # z - Yes
      phylo_z <- vcv[,"traittdt_z:traittdt_z.animal"]
        spp_z <- vcv[,"traittdt_z:traittdt_z.species"]
      units_z <- vcv[,"traittdt_z:traittdt_z.units"]
      
      h2_z = phylo_z / (phylo_z + spp_z + units_z)
      spp_z = spp_z / (phylo_z + spp_z + units_z)
      posterior.mode(h2_z)
      HPDinterval(h2_z)

      posterior.mode(spp_z)
      HPDinterval(spp_z)
```

```{r, correlations}

# Estimate phylogenetic correlatons between traits. 
    # Trait variances 
   phylocor_ctmax_tdt <- phylo_corrs(vcv, trait1 = "tdt_z", trait2 = "ctmax")
   posterior.mode(phylocor_ctmax_tdt)
   HPDinterval(phylocor_ctmax_tdt)

   phylocor_ctmax_cfls <- phylo_corrs(vcv, trait1 = "cfts", trait2 = "ctmax")
   posterior.mode(phylocor_ctmax_cfls)
   HPDinterval(phylocor_ctmax_cfls)

  phylocor_tdt_cfls <- phylo_corrs(vcv, trait1 = "tdt_z", trait2 = "cfts")
   posterior.mode(phylocor_tdt_cfls)
   HPDinterval(phylocor_tdt_cfls)

```

```{r, posteriorsz}
# We'll now plot the posterior distributions for each species.Obviously our 11 species with known data will have a much tighter distribution. You can see that in the plot. But the imputations are our 'best" guess based on the strong phylogenetic signal in the data. We can also always propagate the uncertainty across any subsequent analysis (like for example our micro-climate models)
  mcmc_areas(z[,1:15],prob = 0.8)
```

## Box 1 – Thermal Death Time framework case studies

Parameters from Thermal Death Time (TDT) curves provide a powerful tool for understanding the thermal sensitivity of organisms. Comparative approaches using such data can provide a way for us to evaluate differences in population and species sensitivity, and identify the key ecological and life-history traits that increase vulnerability to heat stress. Nonetheless, while static measures of thermal tolerance (e.g., $CT_{max}$) are widespread, parameters from TDT curves  are much less frequently estimated. In addition, we have a poor understanding of how dynamic (TDT) and static ($CT_{max}$) lethal measures correlate with each other and with sub-lethal measures of damage, such as critical fertility limits (CFLs). Identifying the correlation between lethal and sub-lethal limits can provide powerful ways to further clarify species vulnerability to heat stress that might lead to population extinction well before mortality is identified. 

A number of significant challenges imped are ability to take the TDT and sub-lethal frameworks into a comparative context. First, ethical, conservation, and logistical challenges limit our ability to measure and estimate key parameters for many species, creating significant gaps in our knowledge across the tree of life. Second, while there has been a focus on species-level responses, population-level information is seldom incoperated into comparative frameworks limiting our ability to decompose sources of variance [@Pottier2023]. 

Powerful multivariate hierachical models (i.e., multi-response models) are capable of dealing with missing data, and provide a means by which multiple physiological thermal tolerance measures can be modelled simultaneously [@Noble2021; @Pottier2023]. When used in conjunction with an understanding of the phylogenetic relationships among species and/or populations, such modelling approaches can provide informed estimates for species missing data and explicitly estimate the covariance between tolerance measures while accounting for their uncertainty. Such insight can be used to inform policy and conservation-related decision making for species with little to no data. 

#### Application of Multivariate Comparative Approaches using Thermal Tolerance Measures: A case study using *Drosophilids*

We integrated static lethal limits ($CT_{max}$) collected by @Heerwaarden2021 and XX with dynamic lethal limit measures from TDT curces [i.e., slope ($z^{TDT}$) and intercept ($CT_{max}^{TDT}$)] estimated by XX. We also collected data to estimate TDT curve parameters for eight additonal species following protocols outlined in @Orsted2022. Critical fertility limits for *Drosophilids* were compiled from @Parratt2021 and @Heerwaarden2021. These data were integrated with data on lethal limits at the species-level. Overall, we obtained data for `r length(unique(t$tip.label))` species ($N_{CT_{max}}$ = `r sum2[2]` species; $N_{z^{TDT}}$ = `r sum2[4]` species and $N_{CFLs}$ = `r sum2[3]` species). When the same species were sampled multiple times we retained within species variation in models. We then fit the following model in R (vers. `r paste0(R.Version()$major, ".", R.Version()$minor)`)[@R2023] with the package *MCMCglmm* (vers. `r utils::packageVersion("MCMCglmm")`), which uses data augmentation during model fittng to estimate missing data [@Hadfield2010]:

$$
\begin{bmatrix}
 CT_{max} \\
 z^{TDT} \\
 CFLs
\end{bmatrix} = u_{i,k} + p_{i,k} + sp_{i,k} + e_{i,k}
$$

$$
\begin{aligned}
& p_{i,k} \sim N\left(0, \sigma_{p}^2 \textbf{A} \right) \\
& sp_{i,k} \sim N\left(0, \sigma_{sp}^2\textbf{I} \right) \\
& e_{i,k} \sim N\left(0,  \sigma_{e}^2\textbf{I}\right) \\
\end{aligned}
$$

##### Evolutionary signatures of thermal tolerance in *Drosophilids*

 Models including phylogeny were better supported than models without phylogeny ($\Delta DIC$ = `r mcmcglmm_model_z_trans_nophylo$DIC - mcmcglmm_model_z_trans$DIC`), with all traits exhibiting a moderate to strong phylogenetic signal indicating evolutionary conservatism in heat tolerance (Phylogenetic $H^2$: $CT_{max}$ – `r posterior.mode(h2_ctmax)`, 95% CI: `r HPDinterval(h2_ctmax)[,"lower"]` to `r HPDinterval(h2_ctmax)[,"upper"]`; $z^{TDT}$ – `r posterior.mode(h2_z)`, 95% CI: `r HPDinterval(h2_z)[,"lower"]` to `r HPDinterval(h2_z)[,"upper"]`; CFLs – `r posterior.mode(h2_cfls)`, 95% CI: `r HPDinterval(h2_cfls)[,"lower"]` to `r HPDinterval(h2_cfls)[,"upper"]`). While the model also suggested that there was within species variation, missing data and lack of replicate species populations make conclusions premature ($I^2_{species}$: $CT_{max}$ – `r posterior.mode(spp_ctmax)`, 95% CI: `r HPDinterval(spp_ctmax)[,"lower"]` to `r HPDinterval(spp_ctmax)[,"upper"]`; $z^{TDT}$ – `r posterior.mode(spp_z)`, 95% CI: `r HPDinterval(spp_z)[,"lower"]` to `r HPDinterval(spp_z)[,"upper"]`; CFLs – `r posterior.mode(spp_cfls)`, 95% CI: `r HPDinterval(spp_cfls)[,"lower"]` to `r HPDinterval(spp_cfls)[,"upper"]`). 

##### Evolutionary relationships can help understand thermal tolerance in species lacking data
The model predicted known data reasonably well for most traits (correlation between known values and values estimated from the model: $z^{TDT}$ – `r cor.test(check_z$trait, check_z$est)$estimate`, 95% CI: `r cor.test(check_z$trait, check_z$est)$conf.int[1]` to `r cor.test(check_z$trait, check_z$est)$conf.int[2]`, p < 0.001; $CT_{max}$ – `r cor.test(check_ctmax$trait, check_ctmax$est)$estimate`, 95% CI: `r cor.test(check_ctmax$trait, check_ctmax$est)$conf.int[1]` to `r cor.test(check_ctmax$trait, check_ctmax$est)$conf.int[2]`, p < 0.001; CFLs – `r cor.test(check_cfls$trait, check_cfls$est)$estimate`, 95% CI: `r cor.test(check_cfls$trait, check_cfls$est)$conf.int[1]` to `r cor.test(check_cfls$trait, check_cfls$est)$conf.int[2]`, p < 0.001), suggesting that even this basic model could be used to provide sensible quantitative measures for *Drosophila* species without heat tolerance estimates. While modelling approaches such as these are not a replacement for actual empirical data, they could be used to provide informed judgements on thermal tolerance in the absence of such information, but should be tested (using cross-validation) and refined when necessary.

##### Static lethal limits are evolutionarily correlated with sub-lethal limits in *Drosophilids*
Interestingly, there was a reasonably strong phylogenetic correlation between $CT_{max}$ and critical fertility limits in *Drosophilids* (r = `r posterior.mode(phylocor_ctmax_cfls)`, 95% CI: `r HPDinterval(phylocor_ctmax_cfls)[,"lower"]` to `r HPDinterval(phylocor_ctmax_cfls)[,"upper"]`), but not between $CT_{max}$, CFLs and the slope from TDT curves (cor($CT_{max}$, $z^{TDT}$) = `r posterior.mode(phylocor_ctmax_tdt)`, 95% CI: `r HPDinterval(phylocor_ctmax_tdt)[,"lower"]` to `r HPDinterval(phylocor_ctmax_tdt)[,"upper"]`; cor(CFLs, $z^{TDT}$) = `r posterior.mode(phylocor_tdt_cfls)`, 95% CI: `r HPDinterval(phylocor_tdt_cfls)[,"lower"]` to `r HPDinterval(phylocor_tdt_cfls)[,"upper"]`). These results suggest that sub-lethal measures, such as CFLs strongly coincide with a species' upper lethal limit. It would be interesting to understand if this is a general phenomena across more taxonomic groups. 

```{r, fig-treesub}
#| label: fig-treesub
#| fig-cap: Species included in the dataset and their phylogenetic relationships.
#| echo: false
#| message: false

rerun = FALSE
if(rerun){

  layout.matrix <- matrix(c(1, 1, 1, 2,3,4), nrow = 3, ncol = 2) # Phylogeny takes up 3 panels (plot = 1) and the others take up a single panel. 

  pdf(height = 10.2, width = 8.1, file = here::here("output", "fig", "fig1.pdf"))
  layout(mat = layout.matrix) 
  # Plot 1
  plot(t, type = "tidy", cex = 0.65)

  # Plot 2
  plot(check_z$trait ~ check_z$est, ylab = "TDT Slope (z)", xlab = "Estimated TDT Slope", pch = 16, cex = 3, cex.lab = 1.4)
  abline(a = 0, b = 1, col = "red")
  dev.off()
} else {
  fig <- magick::image_read(here::here("output", "fig", "fig1.pdf"))
  plot(fig)
}
```

## References
